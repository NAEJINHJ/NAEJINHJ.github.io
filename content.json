{"meta":{"title":"NA'rchive","subtitle":null,"description":"Hyejin's log","author":"Hyejin","url":"https://NAEJINHJ.github.com"},"pages":[],"posts":[{"title":"고 & 스톱","slug":"C-sharp","date":"2019-01-18T02:09:10.727Z","updated":"2019-01-18T08:26:59.914Z","comments":true,"path":"2019/01/18/C-sharp/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/18/C-sharp/","excerpt":"","text":"[목차] 1. HOME 2. HOW TO 3. GAME PLAY 4. GO STOP 5. SCORE 특이 사항 1. HOME [START button] MouseMove 이벤트: 버튼에 마우스 올리면, 웃고 있는 캐릭터 이미지로 변경 MouseLeave 이벤트: 마우스가 버튼 밖으로 벗어나면, 다시 원래의 이미지로 돌아감 Click 이벤트: 게임 플레이 화면으로 전환 [HowTo button] MouseMove 이벤트: 버튼에 마우스 올리면, 웃고 있는 캐릭터 이미지로 변경 MouseLeave 이벤트: 마우스가 버튼 밖으로 벗어나면, 다시 원래의 이미지로 돌아감 Click 이벤트: 게임 룰 설명 화면으로 전환 [화면 전환 방식] 1) HOME 폼을 숨김 2) 실행하고 싶은 폼의 객체 생성하여 실행 시킴 3) HOME 폼 닫음 2. HOW TO [룰 설명] 이미지로 제작, backgroundimage로 설정 [Click 이벤트] 화살표 버튼 클릭 시, 다시 홈 화면으로 전환 3. GAME PLAY 총 5개의 패널로 구성 [computerCardPanel] 위에서 부터 컴퓨터 패를 놓음 [computerScorePanel] 컴퓨터가 얻은 카드 순서대로 정렬 점수 출력 GO를 한 횟수를 출력 [playPanel] 실제 게임의 필드(바닥)에 해당하는 패널 [UserScorePanel] 유저가 얻은 카드 순서대로 정렬 점수 출력 GO를 한 횟수를 출력 [UserCardPanel] 유저의 카드 패를 놓음 카드 패는 버튼으로 구성 [Card Setting] 카드 클래스 구현 생성자에서 카드의 인덱스, 이미지, 월과 가치 값 세팅 크기 48의 클래스 배열 생성 카드를 순서대로 저장시킨 뒤, 랜덤하게 섞어줌 분배 0~9 : 유저의 카드패 10~ 19 : 컴퓨터의 카드패 20 ~ 27: 필드에 깔리는 카드 28 ~ 47: 뒤집어져 있는 카드 더미 [이미지 예외 처리] 이미지 세팅 과정에서 필요한 이미지가 존재하지 않을 시, 예외 처리 에러 실행 [GAME START] 필드에 카드가 랜덤하게 8장 깔림 (필드에 깔린 카드들은 리스트로 관리) Card Setting 과정에서 분배받은 8장의 카드에 대해, picturebox 생성하는 식으로 구현 동일한 월을 갖는 카드가 있을 시, 일정한 간격으로 겹쳐지게 함 (각 월마다 기준 좌표가 존재) [User’s Card] 10개의 버튼(유저패)의 backgroundimage 분배받은 카드의 이미지 버튼 클릭 시, 유저가 그 카드를 낸 것으로 간주 해당 버튼의 사용을 금지시키고, 더이상 보이지 않도록 설정 [총통] 유저 혹은 상대 패에 같은 월의 카드가 4장 있을 시, 총통임을 메시지 박스로 보여주고, 즉시 50점 획득해 승리하도록 함 [User’s turn] 필드에 일치하는 월이 있는지, 해당 월의 카드가 몇 장 있는지 체크 조건에 따라 득점되어 필드에 추가 or 똥 처리 득점한 카드 가치 값에 따라 다른 좌표로 정렬되어 각 score 패널에 표시 이후 상대의 turn으로 바뀜 [Computer’s turn] 낸 카드는 숨겨짐 delay 함수 사용 카드를 내거나 이벤트가 발생되었을 때, 육안으로 잘 보이게 하기 위함 (시간 지연 함수) [Computer’s turn] 가진 패의 앞에서부터 카드를 내도록 함 현재 점수와 고의 횟수에 대한 정보가 각 스코어 패널의 레이블에 표시 됨 [똥 Event] 더미에서 카드를 뒤집고 3장이 겹치게 되었을 때 발생 &gt; 똥 이미지 출력, 3장의 카드는 그대로 필드에 남김 (만약 필드에 남은 3장의 카드와 같은 월의 카드를 낸다면 총 4장으 얻게 됨) [Score] 각 피의 개수에 따른 점수 홍단 / 청단 / 초단 고도리 3광 / 4광 / 5광 피박 고박 고 횟수 당 1점 추가 [Calculating] 리스트로 상대와 내가 획득한 카드의 인덱스 저장해, 이를 토대로 점수 계산 이벤트 발생 시, (홍단/청단/초단, 고도리, 3광/4광/5광, 똥) 델리게이트를 사용 이미지 출력과 점수 계산이 되도록 구현 [Game Over] 남은 더미 카드 수 소진 스탑 선택 시 4. GO STOP GO의 여부를 묻는 폼 7점 이상 획득 시 생성 7점 이하까지는 피박이 적용되지 X 카드가 추가되어 면박이 될 경우, 점수가 하락하지만 GO/STOP 선택은 가능 [GO 선택] GO 이미지가 뜸 점수와 GO의 횟수 하나씩 증가 게임 계속 진행 [STOP 선택] 유저의 승리로 게임 종료 게임 종료 시, 스코어폼으로 화면 전환 [선택 결과 전달] 어떠한 버튼을 선택했는지에 대한 정보는 DialogResult를 통해 게임플레이 폼으로 전달 어떤 버튼을 선택했는지에 따라 다른 이미지가 띄워짐 5. SCORE 2개의 패널로 구성 (컴퓨터용 / 유저용) [게임 결과] 색으로 승패 표시 캐릭터 표정 &amp; 도장 이미지 승자의 패널에는 점수와 획득 금액 출력 (무승부 시, 우측과 같은 화면 띄워짐) [특이 사항] - 보너스 패, 흔들기 등을 생략해 프로젝트 스케일 조정 - 게임에 사용된 이미지 직접 제작 - 버전별 업데이트 내역 관리하여 효율적인 작업 수행","categories":[{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/categories/Project/"},{"name":"C#","slug":"Project/C","permalink":"https://NAEJINHJ.github.com/categories/Project/C/"}],"tags":[{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/tags/Project/"},{"name":"C#","slug":"C","permalink":"https://NAEJINHJ.github.com/tags/C/"},{"name":"game","slug":"game","permalink":"https://NAEJINHJ.github.com/tags/game/"}]},{"title":"프로필 스크레이핑","slug":"bts-profile-scraping","date":"2019-01-13T15:08:45.082Z","updated":"2019-01-18T08:28:01.429Z","comments":true,"path":"2019/01/14/bts-profile-scraping/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/14/bts-profile-scraping/","excerpt":"","text":"위키피디아로 스크레이핑 실습하는건 질렸당! 좀 더 색다르게 연습해보기 위해 최애의 프로필을 긁어오기로 했따! 우선 프로필을 긁어올 사이트에 접속 :) (http://bts.ibighit.com/bts.php) F12를 눌러 개발자 도구를 띄운당 프로필 사진을 포함하고 있는 태그를 확인한다! img 태그에 마우스를 살포시 올려놔보자! (울먹) 본격적으로 Jupyter Notebook을 사용해 프로필을 긁어와보자! 12from bs4 import BeautifulSoupimport urllib.request as req [BeautifulSoup] HTML과 XML에서 간단히 정보 추출 가능 태그를 활용해 필요한 데이터를 수집 (태그 중심으로 분리 가능) [urllib] urllib는 URL을 다루는 모듈을 모아놓은 패키지 urllib.request 모듈은 웹사이트에 있는 데이터에 접근하는 기능 제공 인증, redirect, 쿠키처럼 인터넷을 이용한 다양한 요청과 처리 지원 (참조: https://medium.com/@katekim720/%EC%9B%B9-%ED%81%AC%EB%A1%A4%EB%A7%81%EA%B3%BC-%EC%8A%A4%ED%81%AC%EB%A0%88%EC%9D%B4%ED%95%91-%EB%B6%80%ED%84%B0-e32e237da3db) 123url = \"http://bts.ibighit.com/bts.php\"res = req.urlopen(url)soup = BeautifulSoup(res,\"html.parser\") 1234profile_img = &#123;\"class\":\"bts-img\"&#125;eee = soup.find_all(\"img\",profile_img) #img 태그 전체 검색for m in eee: print(\"http://bts.ibighit.com/\" + m.get(\"src\") + \"\\n\") 프로필 설명 img도 같은 방식으로 긁어오자! 1234profile_desc = &#123;\"class\":\"bts-desc\"&#125;ddd = soup.find_all(\"img\",profile_desc)for k in ddd: print(\"http://bts.ibighit.com/\"+k.get(\"src\")+\"\\n\") 긁어온 png 이미지들을 화면에 뿌려보자! 1234from IPython.display import Imagefor n in eee: link = \"http://bts.ibighit.com/\"+n.get(\"src\")+\"\\n\" display(Image(url = link)) 잘 출력되는 것을 확인해 봤다면, 프로필 설명과 함께 뿌려보자! 다음번엔 웹크롤링으로 https://ef7890.ibighit.com/main/index?gclid=Cj0KCQiAg_HhBRDNARIsAGHLV53HBymFXA4mlwSGXjnhpGNO_6JUqV6wmYVUILp-HHucbMGNx9bpV5caAmGeEALw_wcB 여길 긁어보겠다!","categories":[{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/"},{"name":"Machine Learning","slug":"BIGDATA/Machine-Learning","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/Machine-Learning/"},{"name":"Web scraping","slug":"BIGDATA/Machine-Learning/Web-scraping","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/Machine-Learning/Web-scraping/"}],"tags":[{"name":"python","slug":"python","permalink":"https://NAEJINHJ.github.com/tags/python/"},{"name":"web scraping","slug":"web-scraping","permalink":"https://NAEJINHJ.github.com/tags/web-scraping/"}]},{"title":"Titanic: Machine Learning from Disaster - first challenge","slug":"Titanic","date":"2019-01-13T13:20:04.365Z","updated":"2019-01-13T15:02:36.450Z","comments":true,"path":"2019/01/13/Titanic/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/13/Titanic/","excerpt":"","text":"[Element] Survival NO = 0 Yes = 1 Pclass Ticket class 1st = 1 2nd = 2 3rd = 3 SibSp 동반한 형제, 자매, 배우자의 수 Parch 동반한 부모, 자식의 수 ticket 티켓 고유 넘버 Fare Passenger fare Cabin 객실 번호 Embarked 출발지 Cherbourg = C Queenstown = Q Southampton = S [향후 개선 방안] 이름의 last name 추출해 가족을 그룹으로 식별해볼 것 Age 결측치 다른 값으로 채워보기 Partner, sex, age를 고려 → 30대 이상일 경우, 부모일 확률 높음 참고해 볼 곳 &gt;&gt; https://www.kaggle.com/yassineghouzam/titanic-top-4-with-ensemble-modeling https://towardsdatascience.com/kaggle-titanic-machine-learning-model-top-7-fa4523b7c40 https://towardsdatascience.com/how-i-got-98-prediction-accuracy-with-kaggles-titanic-competition-ad24afed01fc","categories":[{"name":"Kaggle","slug":"Kaggle","permalink":"https://NAEJINHJ.github.com/categories/Kaggle/"}],"tags":[{"name":"python","slug":"python","permalink":"https://NAEJINHJ.github.com/tags/python/"},{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/tags/BIGDATA/"},{"name":"modeling","slug":"modeling","permalink":"https://NAEJINHJ.github.com/tags/modeling/"},{"name":"Kaggle","slug":"Kaggle","permalink":"https://NAEJINHJ.github.com/tags/Kaggle/"}]},{"title":"수소 충전소 최적의 설립 위치 추천\n- ➂ 분석 결과","slug":"dongguk-final","date":"2019-01-13T08:50:07.339Z","updated":"2019-01-13T09:07:17.871Z","comments":true,"path":"2019/01/13/dongguk-final/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/13/dongguk-final/","excerpt":"","text":"[목차] 분석요인 별 추천 입지 수소 충전소 최종 입지 추천 활용방안 및 한계점 참고 문헌 [분석요인 별 추천 입지] [수소 충전소 최종 입지 추천] [상위 5 곳] [상위 20 곳] [활용방안 및 한계점] [참고 문헌]","categories":[{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/categories/Project/"},{"name":"BIGDATA","slug":"Project/BIGDATA","permalink":"https://NAEJINHJ.github.com/categories/Project/BIGDATA/"}],"tags":[{"name":"python","slug":"python","permalink":"https://NAEJINHJ.github.com/tags/python/"},{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/tags/BIGDATA/"},{"name":"modeling","slug":"modeling","permalink":"https://NAEJINHJ.github.com/tags/modeling/"},{"name":"R","slug":"R","permalink":"https://NAEJINHJ.github.com/tags/R/"},{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/tags/Project/"}]},{"title":"수소 충전소 최적의 설립 위치 추천\n- ② 데이터 분석","slug":"dongguk2","date":"2019-01-10T12:07:57.693Z","updated":"2019-01-13T08:42:51.238Z","comments":true,"path":"2019/01/10/dongguk2/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/10/dongguk2/","excerpt":"","text":"[목차] 데이터 목록 및 전처리 분석 방법 - AHP 개요 - 의사결정 계층화 - 요소 선정 - 평가 기준 비교 - 가중치 추정 - 일관성 검증 [데이터 목록 및 전처리] 1. 사용 데이터 목록2. 전처리 과정 csv 형태의 원본 데이터를 python pandas를 이용, dataframe 형태로 가져옴 장소명과 도로명 주소 데이터 추출 지오코딩 API 이용 &gt;&gt; 해당 장소의 좌표값(위도, 경도) 얻음 하버사인 공식 사용 &gt;&gt; 좌표값을 기반으로, 곡면에서 두 지점간의 거리 계산 [분석 방법 - AHP] 1. AHP란? 고려한 데이터가 대부분 거리 데이터였고, 타 논문 참고 결과, 입지 선정시 AHP 기법을 가장 많이 활용한 것을 확인 2. 의사결정 계층- 분석 기준 설정 [상위 단계] 최종 목표(overall goal) [Level.1 단계] 평가 기준 1) 안정성 2) 설립 비용 3) 운영 효율성 [Level.2 단계] 평가 기준에 대한 선택 대안 1) 제 1 보호지역과의 거리 2) 서울 자치구별 화재 발생 3) 2km 반경 내 타 LPG 충전소 존재 유무 4) 버스 차고지와의 거리 3. 요소 선정 [안정성] 1) 제 1종 보호시설과의 거리 주유소의 폭발 위험성을 고려하여, 제 1 보호시설 간의 거리를 분석 요소로 선정 (초중고,유치원 데이터 이용) 제 1종 보호시설과 LPG 주유소간의 거리가 멀수록, 가중치 값 더 크게 산정 2) 자치구별 화재 발생률 수소의 경우, 타가스에 폭발했을 시 [위험 피해율]이 크고, 수소 위험성에 대한 인식이 수소 충전소 설립에 큰 영향을 미칠 수 있기에 분석 요소로 선정하였음 [설립 비용] 2km 반경 타 LPG 충전소 존재 유무 LPG 주유소가 밀집되어 있다면, 밀집된 LPG 주유소 중 한 곳을 수소 충전소로 대체하는 방안 고려 [운영 효율성] 버스 차고지와의 거리 2027년까지, 수도권의 경유 버스 → 수소/전기 버스 등으로 전면 교체 향후 버스 차고지 근처에 수소 충전소가 설립될 경우, 충전소 운영에 영향을 미칠 것이라 판단 매일 경제 (http://news.mk.co.kr/,2018.05.14) 월간 수소 경제 (http://www.h2news.kr/2018.07.10) 4. 평가 기준 비교 앞서 선정한 4가지 요인들에 대해, 중앙값을 기준으로 4개의 그룹으로 나눠, 그룹 번호 부여 모든 것들이 다 [커지면 좋거나/ 작아지면 좋거나]의 기준 이었기 때문에, 중앙값을 기준으로 grouping하기로 판단함 (타 논문을 참고하여, 쌍대비교치 3,5,7로 설정) 대안별 중요 순위는 주관적으로 설정됨 검증을 위해 이후 일관성 검증을 진행하였음 [쌍대비교표 설명] 차고지 기준으로 화재는 매우 중요 &gt;&gt; 7 부여 1종 보호시설은 화재보다는 덜 중요 즉, 적당히 중요 &gt;&gt; 5 부여 차고지 기준 2km 이내의 타 충전소의 개수는 약간 중요 &gt;&gt; 3 부여 [쌍대비교 결과]- 버스차고지 구별 화재 발생률, 제 1종 보호시설, 주변 LPG 주유소 요인에 대해서도 동일하게 쌍대비교 수행 5. 가중치 추정 고유치 방법(Eigenvalue Method) 쌍별 비교된 의사 결정 요소들 간의 쌍대적 가중치 계산 k = 평가 기준 (버스 차고지, LPG 주유소 밀집도, 제 1종 보호시설, 자치구별 화재 비율) 상단의 수식을 통해 최종 행렬(nX1)을 만들어 냄 6. 일관성 검증 상단의 수식을 통해 일관성 검증 수행","categories":[{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/categories/Project/"},{"name":"BIGDATA","slug":"Project/BIGDATA","permalink":"https://NAEJINHJ.github.com/categories/Project/BIGDATA/"}],"tags":[{"name":"python","slug":"python","permalink":"https://NAEJINHJ.github.com/tags/python/"},{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/tags/BIGDATA/"},{"name":"modeling","slug":"modeling","permalink":"https://NAEJINHJ.github.com/tags/modeling/"},{"name":"R","slug":"R","permalink":"https://NAEJINHJ.github.com/tags/R/"},{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/tags/Project/"}]},{"title":"수소 충전소 최적의 설립 위치 추천\n- ① 분석 배경 및 목표","slug":"dongguk","date":"2019-01-10T02:29:50.835Z","updated":"2019-01-12T07:23:51.605Z","comments":true,"path":"2019/01/10/dongguk/","link":"","permalink":"https://NAEJINHJ.github.com/2019/01/10/dongguk/","excerpt":"","text":"[목차] 분석 배경 분석 목표 [개요] ▶ 빅데이터 청년인재 [빅데이터 분석 기반 지능 SW 과정] 프로젝트 ▷ 기간 2018/07/01 ~ 2018/09/07 (약 2개월) ▶ 담당 역할 데이터 수집 데이터 전처리 모델링 ▷ 활용 분석 도구 Jupyter notebook (python) Folium (python) Rstudio (R) Excel 1. 분석 배경 ▶ 목표치에 따른 수소 충전소 확충 진행률의 부진 확인가능 “부지 확보 장기간 소요” &gt;&gt; 주요한 수소 충전소 보급 지연 원인 ▶ 일반 전기차 충전소의 약 20배의 비용 소요 ▷ 기존 충전소 / 주유소 부지 활용해 최적의 배치 전략 필요 [출처] news1뉴스(http://news1.kr,2018.03.22) 수소 산업 협회는 서울에 한정 짓더라도 기존의 LPG 충전소를 활용하면, 약 70여곳의 수소 충전소 확보가 가능하다 밝힘 기존의 부지, 건물, 인력을 그대로 활용하는 것이 비용적인 측면에서 효율적인 것을 확인 가능 [기타 참조 가능 기사] - LPG-수소 융‧복합 충전소, 부지 면적 확보가 ‘핵심’ (http://www.gnetimes.co.kr/news/articleView.html?idxno=44757) - 1145개 LPG충전ㆍ주유소 “수소 복합 충전소 전환 가능” (http://www.energy-news.co.kr/news/articleView.html?idxno=54052) 2. 분석 목표","categories":[{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/categories/Project/"},{"name":"BIGDATA","slug":"Project/BIGDATA","permalink":"https://NAEJINHJ.github.com/categories/Project/BIGDATA/"}],"tags":[{"name":"python","slug":"python","permalink":"https://NAEJINHJ.github.com/tags/python/"},{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/tags/BIGDATA/"},{"name":"modeling","slug":"modeling","permalink":"https://NAEJINHJ.github.com/tags/modeling/"},{"name":"R","slug":"R","permalink":"https://NAEJINHJ.github.com/tags/R/"},{"name":"Project","slug":"Project","permalink":"https://NAEJINHJ.github.com/tags/Project/"}]},{"title":"Bobblehead와 Dodger dog","slug":"bobblehead","date":"2018-12-20T14:22:06.015Z","updated":"2018-12-20T14:20:06.050Z","comments":true,"path":"2018/12/20/bobblehead/","link":"","permalink":"https://NAEJINHJ.github.com/2018/12/20/bobblehead/","excerpt":"","text":"● 목적 1) 버블헤드 인형 홍보전략을 통한 야구장 관중 증가 여부 2) 야구표로 증가한 구단 수익으로 버블헤드 인형 홍보활동에 투자한 고정비용, 가변비용 충당 가능 여부 ● 라이브러리 1) 선형 회귀 분석용 함수: car 2) 그래픽 패키지: lattice &lt;메이저리그 2012년 다저스 홈경기 데이터&gt; ordered_day_of_week 정렬된 요일 변수 ordered_month 정렬된 월 변수 [요일별 dodgers 관중수 분포] 123with(data=dodgers,plot(ordered_day_of_week,attend/1000,xlab=\"Day of Week\",ylab = \"Attendence (thousands)\",col=\"violet\",las=1)) [월별 dodgers 관중수 분포] 123with(data=dodgers,plot(ordered_month,attend/1000,xlab=\"Month\",ylab=\"Attendance (thousands)\",col=\"light blue\",las=1)) [주간/야간 경기 &amp; 불꽃놀이 유무에 따른 관중수 분포] 경기 시간과 날씨 (맑음/흐림)에 대한 조건을 설정 → 온도와 관중수 간의 관계 파악 * library(lattice) (참조: http://visualize.tistory.com/305): 직교 형태의 그래픽(Trellis graphic)을 생성하는 코드 포함1) 다차원의 데이터를 사용하려 할 때, 한번에 많은 플롯 생성 가능2) 기본 플로팅 시스템의 방법을 ‘mfrow’와 ‘mfcall’이라는 인수 통해 활용 가능 1234567891011121314151617181920212223library(lattice) # 플로팅을 위해 사용하는 라이브러리group.labels &lt;- c(\"No Fireworks\",\"Fireworks\")group.symbols &lt;- c(21,24)group.colors &lt;- c(\"black\",\"black\")group.fill &lt;- c(\"black\",\"red\")xyplot(attend/1000~temp | skies + day_night, data=dodgers, groups=fireworks, pch=group.symbols, aspect= 1, cex=1. 악 * library(&lt;font color=5, col=group.colors, fill=group.fill, layout=c(2,2), type=c(\"p\",\"g\"), strip=strip.custom(strip.levels=TRUE,strip.names=FALSE, style=1), xlab = \"Temperature (Degrees Fahrenheit)\", ylab = \"Attendance (thousands)\", key = list(space=\"top\", text = list(rev(group.labels), col=rev(group.colors)), points= list(pch=rev(group.symbols),col=rev(group.colors), fill = rev(group.fill)) ) #list ) # xyplot &gt; 그래프 분석 결과, 맑은 날씨의 주간경기에는 온도가 높을수록 관중수가 적다.&gt; 일반적으로 일요일에는 주간경기를 한다.&gt; 2012년 LA 다저스 구장의 경기는 한 게임을 제외하고 모두 날씨가 좋았다. [LA 다저스의 상대팀 기준 다저스 구장 관중수] 단변량 산점도12345678910111213141516group.labels &lt;- c(\"Day\",\"Night\")group.symbols &lt;- c(1,20)group.symbols.size &lt;- c(2,2.75)bwplot(opponent~attend/1000,data=dodgers, groups=day_night, xlab = \"Attendance (thousands)\", panel = function(x,y,groups,subscripts, ...)&#123; panel.grid(h= (length(levels(dodgers$opponent))-1),v=-1) panel.stripplot(x,y,groups=groups, subscripts = subscripts, cex=group.symbols.size, pch=group.symbols, col=\"darkblue\" ) &#125;, key= list(space=\"top\", text=list(group.labels,col=\"black\"), points = list(pch=group.symbols, cex=group.symbols.size, col=\"darkblue\") ) )&gt; 도시 규모가 큰 메트로폴리탄 지역을 연고로 하는 팀과 경기를 하는 경우 관중수는 큰 변화 X [회귀모형] train-test 모형- 버블 헤드 인형을 이용한 홍보활동에 대한 통계적 유의성 검증- 유형I 분산 분석으로 순차적 검증에 대한 제곱합을 계산1print(anova(my.model.fit))진단용 plot [패키지 car 이용해 추가 모형 진단] 123library(car)residualPlots(my.model.fit)marginalModelPlots(my.model.fit) 유의한 outlier 확인1print(outlierTest(my.model.fit))&gt; 없는 것으로 확인&lt;다저스의 버블헤드 인형 홍보에 대한 예측모형에 근거&gt;1) 다가오는 시즌에 예측 대상 경기의 관중수 예측 가능2) 버블헤드 인형을 활용한 홍보에 따른 관중수 예측 가능3) 관중 예측값 사용해 홍보 유무에 따른 다저스 수익 예측 가능","categories":[{"name":"BIGDATA","slug":"BIGDATA","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/"},{"name":"Modeling","slug":"BIGDATA/Modeling","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/Modeling/"},{"name":"R","slug":"BIGDATA/Modeling/R","permalink":"https://NAEJINHJ.github.com/categories/BIGDATA/Modeling/R/"}],"tags":[{"name":"modeling","slug":"modeling","permalink":"https://NAEJINHJ.github.com/tags/modeling/"},{"name":"R","slug":"R","permalink":"https://NAEJINHJ.github.com/tags/R/"}]}]}